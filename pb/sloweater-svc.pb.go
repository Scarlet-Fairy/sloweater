// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: sloweater-svc.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateWorkloadImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId    string `protobuf:"bytes,1,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
	GithubRepoUrl string `protobuf:"bytes,2,opt,name=github_repo_url,json=githubRepoUrl,proto3" json:"github_repo_url,omitempty"` //string
}

func (x *CreateWorkloadImageRequest) Reset() {
	*x = CreateWorkloadImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sloweater_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkloadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkloadImageRequest) ProtoMessage() {}

func (x *CreateWorkloadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sloweater_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkloadImageRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkloadImageRequest) Descriptor() ([]byte, []int) {
	return file_sloweater_svc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkloadImageRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *CreateWorkloadImageRequest) GetGithubRepoUrl() string {
	if x != nil {
		return x.GithubRepoUrl
	}
	return ""
}

type CreateWorkloadImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *CreateWorkloadImageResponse) Reset() {
	*x = CreateWorkloadImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sloweater_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkloadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkloadImageResponse) ProtoMessage() {}

func (x *CreateWorkloadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sloweater_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkloadImageResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkloadImageResponse) Descriptor() ([]byte, []int) {
	return file_sloweater_svc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWorkloadImageResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type ScheduleWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScheduleWorkloadRequest) Reset() {
	*x = ScheduleWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sloweater_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWorkloadRequest) ProtoMessage() {}

func (x *ScheduleWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sloweater_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWorkloadRequest.ProtoReflect.Descriptor instead.
func (*ScheduleWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_sloweater_svc_proto_rawDescGZIP(), []int{2}
}

type ScheduleWorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScheduleWorkloadResponse) Reset() {
	*x = ScheduleWorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sloweater_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWorkloadResponse) ProtoMessage() {}

func (x *ScheduleWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sloweater_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWorkloadResponse.ProtoReflect.Descriptor instead.
func (*ScheduleWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_sloweater_svc_proto_rawDescGZIP(), []int{3}
}

var File_sloweater_svc_proto protoreflect.FileDescriptor

var file_sloweater_svc_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x6c, 0x6f, 0x77, 0x65, 0x61, 0x74, 0x65, 0x72, 0x2d, 0x73, 0x76, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x65, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c,
	0x22, 0x34, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb6, 0x01,
	0x0a, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sloweater_svc_proto_rawDescOnce sync.Once
	file_sloweater_svc_proto_rawDescData = file_sloweater_svc_proto_rawDesc
)

func file_sloweater_svc_proto_rawDescGZIP() []byte {
	file_sloweater_svc_proto_rawDescOnce.Do(func() {
		file_sloweater_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_sloweater_svc_proto_rawDescData)
	})
	return file_sloweater_svc_proto_rawDescData
}

var file_sloweater_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sloweater_svc_proto_goTypes = []interface{}{
	(*CreateWorkloadImageRequest)(nil),  // 0: pb.CreateWorkloadImageRequest
	(*CreateWorkloadImageResponse)(nil), // 1: pb.CreateWorkloadImageResponse
	(*ScheduleWorkloadRequest)(nil),     // 2: pb.ScheduleWorkloadRequest
	(*ScheduleWorkloadResponse)(nil),    // 3: pb.ScheduleWorkloadResponse
}
var file_sloweater_svc_proto_depIdxs = []int32{
	0, // 0: pb.Scheduler.CreateWorkloadImage:input_type -> pb.CreateWorkloadImageRequest
	2, // 1: pb.Scheduler.ScheduleWorkload:input_type -> pb.ScheduleWorkloadRequest
	1, // 2: pb.Scheduler.CreateWorkloadImage:output_type -> pb.CreateWorkloadImageResponse
	3, // 3: pb.Scheduler.ScheduleWorkload:output_type -> pb.ScheduleWorkloadResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sloweater_svc_proto_init() }
func file_sloweater_svc_proto_init() {
	if File_sloweater_svc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sloweater_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkloadImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sloweater_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkloadImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sloweater_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sloweater_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleWorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sloweater_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sloweater_svc_proto_goTypes,
		DependencyIndexes: file_sloweater_svc_proto_depIdxs,
		MessageInfos:      file_sloweater_svc_proto_msgTypes,
	}.Build()
	File_sloweater_svc_proto = out.File
	file_sloweater_svc_proto_rawDesc = nil
	file_sloweater_svc_proto_goTypes = nil
	file_sloweater_svc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SchedulerClient is the client API for Scheduler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulerClient interface {
	CreateWorkloadImage(ctx context.Context, in *CreateWorkloadImageRequest, opts ...grpc.CallOption) (*CreateWorkloadImageResponse, error)
	ScheduleWorkload(ctx context.Context, in *ScheduleWorkloadRequest, opts ...grpc.CallOption) (*ScheduleWorkloadResponse, error)
}

type schedulerClient struct {
	cc grpc.ClientConnInterface
}

func NewSchedulerClient(cc grpc.ClientConnInterface) SchedulerClient {
	return &schedulerClient{cc}
}

func (c *schedulerClient) CreateWorkloadImage(ctx context.Context, in *CreateWorkloadImageRequest, opts ...grpc.CallOption) (*CreateWorkloadImageResponse, error) {
	out := new(CreateWorkloadImageResponse)
	err := c.cc.Invoke(ctx, "/pb.Scheduler/CreateWorkloadImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) ScheduleWorkload(ctx context.Context, in *ScheduleWorkloadRequest, opts ...grpc.CallOption) (*ScheduleWorkloadResponse, error) {
	out := new(ScheduleWorkloadResponse)
	err := c.cc.Invoke(ctx, "/pb.Scheduler/ScheduleWorkload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchedulerServer is the server API for Scheduler service.
type SchedulerServer interface {
	CreateWorkloadImage(context.Context, *CreateWorkloadImageRequest) (*CreateWorkloadImageResponse, error)
	ScheduleWorkload(context.Context, *ScheduleWorkloadRequest) (*ScheduleWorkloadResponse, error)
}

// UnimplementedSchedulerServer can be embedded to have forward compatible implementations.
type UnimplementedSchedulerServer struct {
}

func (*UnimplementedSchedulerServer) CreateWorkloadImage(context.Context, *CreateWorkloadImageRequest) (*CreateWorkloadImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkloadImage not implemented")
}
func (*UnimplementedSchedulerServer) ScheduleWorkload(context.Context, *ScheduleWorkloadRequest) (*ScheduleWorkloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScheduleWorkload not implemented")
}

func RegisterSchedulerServer(s *grpc.Server, srv SchedulerServer) {
	s.RegisterService(&_Scheduler_serviceDesc, srv)
}

func _Scheduler_CreateWorkloadImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkloadImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).CreateWorkloadImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Scheduler/CreateWorkloadImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).CreateWorkloadImage(ctx, req.(*CreateWorkloadImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_ScheduleWorkload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleWorkloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).ScheduleWorkload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Scheduler/ScheduleWorkload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).ScheduleWorkload(ctx, req.(*ScheduleWorkloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Scheduler",
	HandlerType: (*SchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkloadImage",
			Handler:    _Scheduler_CreateWorkloadImage_Handler,
		},
		{
			MethodName: "ScheduleWorkload",
			Handler:    _Scheduler_ScheduleWorkload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sloweater-svc.proto",
}
